baseBundles = \
 file:lib/kernel/org.eclipse.virgo.kernel.userregion-2.1.0.M06-incubation.jar@start,\
 file:lib/kernel/org.eclipse.virgo.kernel.osgicommand-2.1.0.M06-incubation.jar@start,\
 file:lib/kernel/org.eclipse.gemini.naming.impl.bundle-Incubation-1.0-SNAPSHOT.jar@start\\

# NOTE: naming bundle is deployed in the user region not in the kernel
# because naming is trying to look up services for osgi:service(list)/ URI Schema by using clien bundle context (i.e ServiceFactory stuff)
# it would always get a userregion bundle context (if naming is deployed in kernel that is) and would never find the needed service (as it is not in the list of exported services)
# wicked stuff :)

packageImports =\
 org.eclipse.virgo.kernel.artifact.*;version="0",\
 org.eclipse.virgo.kernel.core;version="0",\
 org.eclipse.virgo.kernel.deployer.core;version="0",\
 org.eclipse.virgo.kernel.deployer.core.event;version="0",\
 org.eclipse.virgo.kernel.install.*;version="0",\
 org.eclipse.virgo.kernel.osgi.*;version="0",\
 org.eclipse.virgo.kernel.model.management;version="0",\
 org.eclipse.virgo.kernel.module;version="0",\
 org.eclipse.virgo.kernel.serviceability;version="0",\
 org.eclipse.virgo.kernel.serviceability.*;version="0",\
 org.eclipse.virgo.kernel.services.work;version="0",\
 org.eclipse.virgo.kernel.shell;version="0",\
 org.eclipse.virgo.kernel.shell.*;version="0",\
 org.eclipse.virgo.kernel.shim.*;version="0",\
 org.eclipse.virgo.medic.*;version="0",\
 org.eclipse.virgo.repository;version="0",\
 org.eclipse.virgo.repository.*;version="0",\
 org.eclipse.virgo.util.*;version="0",\
 org.apache.commons.logging;version="[1.0.0,2.0.0)",\
 org.apache.commons.logging.impl;version="[1.0.0,2.0.0)",\
 org.aspectj.*;version="[1.6.5.RELEASE,2.0.0)",\
 org.osgi.service.cm;version="0",\
 org.osgi.service.event;version="0",\
 org.slf4j;version="[1.6.1,2)",\
 org.slf4j.spi;version="[1.6.1,2)",\
 org.osgi.service.jndi;version="0"

serviceImports =\
 org.eclipse.virgo.kernel.deployer.core.ApplicationDeployer,\
 org.eclipse.virgo.kernel.deployer.core.DeployUriNormaliser,\
 org.eclipse.virgo.kernel.install.artifact.ScopeServiceRepository,\
 org.eclipse.virgo.kernel.services.work.WorkArea,\
 org.eclipse.virgo.repository.ArtifactBridge,\
 org.eclipse.virgo.kernel.shell.state.StateService,\
 org.eclipse.virgo.kernel.shell.CommandExecutor,\
 org.eclipse.virgo.repository.RepositoryFactory,\
 org.eclipse.virgo.repository.HashGenerator,\
 org.eclipse.virgo.medic.eventlog.EventLoggerFactory,\
 org.eclipse.virgo.repository.Repository,\
 org.eclipse.virgo.kernel.core.Shutdown,\
 org.osgi.service.cm.ConfigurationAdmin,\
 org.osgi.service.event.EventAdmin,\
 org.eclipse.virgo.medic.dump.DumpGenerator,\
 org.eclipse.virgo.kernel.shim.scope.ScopeFactory,\
 org.eclipse.virgo.kernel.shim.serviceability.TracingService

serviceExports =\
 org.eclipse.virgo.kernel.install.artifact.InstallArtifactLifecycleListener,\
 org.eclipse.virgo.kernel.install.artifact.ArtifactIdentityDeterminer,\
 org.eclipse.virgo.kernel.install.pipeline.stage.transform.Transformer,\
 org.eclipse.virgo.kernel.module.ModuleContextAccessor,\
 org.eclipse.virgo.medic.dump.DumpContributor,\
 org.eclipse.virgo.kernel.osgi.quasi.QuasiFrameworkFactory,\
 org.eclipse.virgo.kernel.osgi.framework.OsgiFramework,\
 org.eclipse.virgo.kernel.osgi.framework.ImportExpander,\
 org.eclipse.virgo.kernel.osgi.framework.PackageAdminUtil,\
 org.osgi.service.event.EventHandler,\
 org.osgi.service.cm.ConfigurationListener,\
 org.osgi.service.cm.ManagedService,\
 org.osgi.service.cm.ManagedServiceFactory

inheritedFrameworkProperties =\
 eclipse.bundle.setTCCL,\
 eclipse.enableStateSaver,\
 org.eclipse.virgo.suppress.heap.dumps,\
 osgi.java.profile,\
 osgi.parentClassloader,\
 osgi.context.bootdelegation,\
 osgi.compatibility.bootdelegation,\
 osgi.java.profile.bootdelegation,\
 osgi.hook.configurators.include

# osgi console support
osgi.console=2401

# the next line must not be broken with back-slashes
# com.dsklyut.virgo.osgi.javanaming.system.property.cleanup - cleans up after tomcat
#  tomcat has a useNaming property on the Emmbeded - but it can not be set with xml.  There is code in Catalina.java that checks a cli argument and can set-it to false. Meaning tomcat is 
# emmbeded and has to get its naming from outer jee container (this is my understanding and I am sticking with it for now).  Because that setting can't be turned off - tomcat throws system level
# props with System.setProperty() for initial and urls that confuses the hell out of gemini-naming causing no initial context exception.
# com.dsklyut.virgo.osgi.javanaming.bridge - publishes a java: URL scheme handler
# com.dsklyut.virgo.osgi.javanaming.bridge.publisher - publishes a test service or the bundle deployed in the pick up (i.e. com.dsklyut.virgo.osgi.javanaming.bridge.test.bundle) to pick up.
# publishing done here so it is guaranteed to be there when hot deploy happens for test.bundle (basically this is just a test not a pattern to use, lathough with jndi one kind of expects stuff to be there by the time client needs it)
initialArtifacts=repository:plan/org.eclipse.virgo.kernel.userregion.springdm, repository:plan/org.eclipse.virgo.web, repository:bundle/com.dsklyut.virgo.osgi.javanaming.system.property.cleanup, repository:bundle/com.dsklyut.virgo.osgi.javanaming.bridge, repository:bundle/com.dsklyut.virgo.osgi.javanaming.bridge.publisher
